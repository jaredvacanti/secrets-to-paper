from secrets_to_paper.core import generate_rsa_key


def test_rsa():

    p = "C0361270B921E5853077AE847B2EADB5C9E0285854F6E4AC27BEBE1D18BFF9DFF6DC5D5422B7AB560D351ACDCE15DAE81DB97FBB184A228480B427E3BE93589B"
    q = "FBC979E63BC8034B6D36008FA9482816F36C513B9905ED3CD089E74576260CB4E50F457452C88AD10646DE115AD37923D0B88F1779EA67D11D6D8F8DBFA670D7"
    n = "BD0C4A0F6C341365CCD24CE66C8FCDD9A896A2FB7655A83E5F1482EA13DDB0DF395C1BED2A9ED2E1C310A7610211BF4ADE0092104F910DE160B444FFAF1F68F8DE89CCFA8DA857108FAA5724738C10D120F78779DC6C53B8D3348A2C6AFD90977B208C72BDC7ACE99B5575CC4EE3D51CBFBE01C780FF8D61404408AB9E053A2D"
    e = "010001"

    public_key_path = "./tests/test-rsa.pub"

    key = generate_rsa_key(public_key_path, p, q, n, e)
    print(key)

    assert True, "Generated private key not equivalent."


if __name__ == "__main__":
    test_rsa()
    print("Everything passed!")
